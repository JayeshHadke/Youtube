1. Refer DataModels from https://app.eraser.io/workspace/YtPqZ1VogxGy1jzIDkzj
2. To ignore folders/files to push into github, add them to .gitignore file in the root directory. Refer https://mrkandreev.name/snippets/gitignore-generator/#Node
3. To Push empty folders into github, add .gitkeep file in the folder.
4. To create new folder using `mkdir` command, use echo "" > name.txt to create a file
5. Change Module/Type in package.json to "type" : "module" to use ES6 import/export syntax
6. To Auto Deploy server after any changes at runtime, then use `nodemon` package. Refer https://www.npmjs.com/package/nodemon 
    - Install nodemon using `npm install nodemon --save-dev` or `npm i -D nodemon`
7. Make changes scripts/dev : 'nodemon src/index.js' in package.json
8. Create folders inside src controllers, db, middlewares, models, routes, utils using command
    - `mkdir controllers,db,middlewares,models,routes,utils`
9. To make consistant code formate, use Prettier package
    - Install Prettier using `npm install prettier --save-dev` or `npm i -D prettier`
    - Create .prettierrc file in the root directory and add the following code
        ```
        {
            "singleQuote": false, // single quote or double quote
            "bracketSpacing": true, // { foo: bar } or {foo: bar}
            "tabWidth": 2, // number of spaces for indentation
            "semi": true, // add semicolon at the end of the line
            "useTabs": true, // use tabs instead of spaces
            "trailingComma": "es5", // add trailing comma 
        }
        ```
    - Create .prettierignore file in the root directory and add the following code
        ```
        node_modules
        *.env
        .env
        .env.*
        ```
    - Add the following code in package.json
        ```
        "scripts": {
            "format": "prettier --write ."
        }
        ```
    - Run `npm run format` to format the code
10. Mongo DB atlas jayeshhadkejrh:Oko5Zx0Us97C0u27
11. Add .env file in the root directory and add the following code
    ```
    PORT=5000
    MONGO_URI=mongodb://localhost:27017/eraser
    ```
12. Insert constants value into src/constants.js file
    ```
    export const DB_NAME = "youtube"
    ```
    
13. When connecting to DB (any db) must use try catch block to handle errors and async await to handle promises
14. Add db/index.js 
    ```
    import mongoose from "mongoose";
    import { DB_NAME } from "../constants.js";

    const connectDB = async () => {
        try {
            const connectionInstance = await mongoose.connect(`${process.env.MONGO_URI}/${DB_NAME}`);
            console.log(`MongoDB connected: ${connectionInstance.connection.host}`);
        } catch (error) {
            console.error(error);
            process.exit(1);
        }
    }

    export default connectDB;
    ```
15. Call connectDB() in src/index.js
16. Define Express app in src/app.js
17. On Successfull connection with db with promise, start the server using app.listen
18. Install cooker-parser package using `npm i cookie-parser` and cores package using `npm i cors`. Please refer https://www.npmjs.com/package/cors and https://www.npmjs.com/package/cookie-parser for more details
19. Make changes in app.js to handel middlerwares
    ```
    import express from "express";
    import cookieParser from "cookie-parser";
    import cors from "cors";

    const app = express();

    app.use(express.json());
    app.use(cookieParser());
    app.use(cors());

    export default app;
    ```

